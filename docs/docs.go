// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/apikey": {
            "get": {
                "description": "Issues a user with a new api key, reissuing a new one invalidates old api keys",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Issues an API key",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token: test",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "email",
                        "name": "email",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Issues an API key",
                        "schema": {
                            "$ref": "#/definitions/useraccount.NewAPIKeyResponse"
                        }
                    },
                    "400": {
                        "description": "Issues an API key",
                        "schema": {
                            "$ref": "#/definitions/useraccount.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Issues an API key",
                        "schema": {
                            "$ref": "#/definitions/useraccount.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/driver/job/complete": {
            "post": {
                "description": "retrieves all the jobs of a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Updates a job to StatusComplete",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token: test",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "job-id",
                        "name": "job-id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updates a job to assigned",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/deliveries.JobResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Updates a job to assigned",
                        "schema": {
                            "$ref": "#/definitions/deliveries.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Updates a job to assigned",
                        "schema": {
                            "$ref": "#/definitions/deliveries.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/driver/job/on-route-to-drop-off": {
            "post": {
                "description": "retrieves all the jobs of a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Updates a job to OnRouteToDropOffLocation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token: test",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "job-id",
                        "name": "job-id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updates a job to assigned",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/deliveries.JobResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Updates a job to assigned",
                        "schema": {
                            "$ref": "#/definitions/deliveries.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Updates a job to assigned",
                        "schema": {
                            "$ref": "#/definitions/deliveries.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/driver/job/on-route-to-pick-up": {
            "post": {
                "description": "retrieves all the jobs of a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Updates a job to OnRouteToPickUpLocation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token: test",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "job-id",
                        "name": "job-id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updates a job to assigned",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/deliveries.JobResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Updates a job to assigned",
                        "schema": {
                            "$ref": "#/definitions/deliveries.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Updates a job to assigned",
                        "schema": {
                            "$ref": "#/definitions/deliveries.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/driver/job/parcel-collected": {
            "post": {
                "description": "retrieves all the jobs of a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Updates a job to ParcelCollected",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token: test",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "job-id",
                        "name": "job-id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updates a job to assigned",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/deliveries.JobResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Updates a job to assigned",
                        "schema": {
                            "$ref": "#/definitions/deliveries.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Updates a job to assigned",
                        "schema": {
                            "$ref": "#/definitions/deliveries.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/driver/jobs": {
            "get": {
                "description": "Gets the jobs of a driver",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Gets the jobs of a driver",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token: test",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "driver-id",
                        "name": "job-id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Gets the jobs of a driver",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/deliveries.JobResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Gets the jobs of a driver",
                        "schema": {
                            "$ref": "#/definitions/deliveries.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Gets the jobs of a driver",
                        "schema": {
                            "$ref": "#/definitions/deliveries.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/driver/save-location": {
            "post": {
                "description": "saves the location of a driver",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "saves the location of a driver",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token: test",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "latitude and longitude",
                        "name": "driverLocation",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/useraccount.DriverLocation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Updates a job to assigned",
                        "schema": {
                            "$ref": "#/definitions/useraccount.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Updates a job to assigned",
                        "schema": {
                            "$ref": "#/definitions/useraccount.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/driver/status": {
            "post": {
                "description": "saves the status of a driver",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "saves the status of a driver",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token: test",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "the status",
                        "name": "driverLocation",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/useraccount.DriverStatus"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Updates a job to assigned",
                        "schema": {
                            "$ref": "#/definitions/useraccount.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Updates a job to assigned",
                        "schema": {
                            "$ref": "#/definitions/useraccount.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/job": {
            "get": {
                "description": "Gets all the information and details of a job",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Gets the information of a job",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "job-id",
                        "name": "job-id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get job, retrieves the details of a job",
                        "schema": {
                            "$ref": "#/definitions/deliveries.JobResponse"
                        }
                    },
                    "400": {
                        "description": "ErrorResponse",
                        "schema": {
                            "$ref": "#/definitions/deliveries.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "ErrorResponse",
                        "schema": {
                            "$ref": "#/definitions/deliveries.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "creates a new job (its order status is open and needs to be closed to be processed)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Creates a new job with its status open",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Add account",
                        "name": "job",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/deliveries.JobRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "New job, replies with all the created details of a job",
                        "schema": {
                            "$ref": "#/definitions/deliveries.JobResponse"
                        }
                    },
                    "400": {
                        "description": "ErrorResponse",
                        "schema": {
                            "$ref": "#/definitions/deliveries.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "ErrorResponse",
                        "schema": {
                            "$ref": "#/definitions/deliveries.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/job/cancel": {
            "post": {
                "description": "We normally cancel a job when its payment intend has not gone through",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Updates the status of a job to cancel",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "job-id",
                        "name": "job-id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "ErrorResponse",
                        "schema": {
                            "$ref": "#/definitions/deliveries.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "ErrorResponse",
                        "schema": {
                            "$ref": "#/definitions/deliveries.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/job/close": {
            "post": {
                "description": "We normally close a job when its ready to be processed and its payment intend has gone through",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Updates the status of a job to close",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "job-id",
                        "name": "job-id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "ErrorResponse",
                        "schema": {
                            "$ref": "#/definitions/deliveries.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "ErrorResponse",
                        "schema": {
                            "$ref": "#/definitions/deliveries.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/job/driver-info": {
            "get": {
                "description": "Retrieves the information of a driver from an order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieves the information of a driver from an order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token: test",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "job-id",
                        "name": "job-id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Gets the information of a driver from an order",
                        "schema": {
                            "$ref": "#/definitions/useraccount.DriverInfo"
                        }
                    },
                    "400": {
                        "description": "Gets the information of a driver from an order",
                        "schema": {
                            "$ref": "#/definitions/useraccount.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Gets the information of a driver from an order",
                        "schema": {
                            "$ref": "#/definitions/useraccount.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/job/eta": {
            "post": {
                "description": "retrieves the estimated time for a driver to arrive at its next destination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Gets the ETA of a job",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token: test",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "job-id",
                        "name": "job-id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "driver-id",
                        "name": "driver-id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Get job",
                        "schema": {
                            "$ref": "#/definitions/deliveries.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Get job",
                        "schema": {
                            "$ref": "#/definitions/deliveries.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/job/order-status": {
            "get": {
                "description": "Retrieves the order status of a job, this status refers to the payment stage open,close,cancel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieves the order status of a job",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "job-id",
                        "name": "job-id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GetJobOrderStatus, gets the status of a job",
                        "schema": {
                            "$ref": "#/definitions/deliveries.JobOrderStatusResponse"
                        }
                    },
                    "400": {
                        "description": "Get Job Status",
                        "schema": {
                            "$ref": "#/definitions/deliveries.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Get Job Status",
                        "schema": {
                            "$ref": "#/definitions/deliveries.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/job/poa": {
            "get": {
                "description": "retrieves an image for proof of delivery",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "retrieves an image for proof of delivery",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token: test",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "job-id",
                        "name": "job-id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "driver-id",
                        "name": "driver-id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Get job",
                        "schema": {
                            "$ref": "#/definitions/deliveries.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Get job",
                        "schema": {
                            "$ref": "#/definitions/deliveries.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "uploads an image for proof of delivery",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "uploads an image for proof of delivery",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token: test",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "job-id",
                        "name": "job-id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "driver-id",
                        "name": "driver-id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Get job",
                        "schema": {
                            "$ref": "#/definitions/deliveries.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Get job",
                        "schema": {
                            "$ref": "#/definitions/deliveries.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/job/status": {
            "get": {
                "description": "Retrieves the status of a job, this status refers to in which stage the delivery is at",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieves the status of a job",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "job-id",
                        "name": "job-id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The status of a job",
                        "schema": {
                            "$ref": "#/definitions/deliveries.JobStatusResponse"
                        }
                    },
                    "400": {
                        "description": "ErrorResponse",
                        "schema": {
                            "$ref": "#/definitions/deliveries.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "ErrorResponse",
                        "schema": {
                            "$ref": "#/definitions/deliveries.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/job/user": {
            "get": {
                "description": "retrieves all the jobs of a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Gets all the jobs of a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token: test",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GetJobs, gets all the jobs of a user",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/deliveries.JobResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "GetJobs",
                        "schema": {
                            "$ref": "#/definitions/deliveries.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "GetJobs",
                        "schema": {
                            "$ref": "#/definitions/deliveries.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Logins a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Logins a user",
                "parameters": [
                    {
                        "description": "Logins a user",
                        "name": "job",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/useraccount.LoginUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {
                            "Token": {
                                "type": "string",
                                "description": "authorisation token"
                            }
                        }
                    },
                    "400": {
                        "description": "Logins a user",
                        "schema": {
                            "$ref": "#/definitions/useraccount.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Logins a user",
                        "schema": {
                            "$ref": "#/definitions/useraccount.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/management/driver-state": {
            "get": {
                "description": "Retrieves all the current driver statuses",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieves all the current driver statuses",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token: test",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/usersvc.DriverState"
                        }
                    },
                    "400": {
                        "description": "driver state",
                        "schema": {
                            "$ref": "#/definitions/management.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "driver state",
                        "schema": {
                            "$ref": "#/definitions/management.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/management/jobs": {
            "get": {
                "description": "Retrieves all the jobs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieves all the jobs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token: test",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/deliverysvc.Job"
                        }
                    },
                    "400": {
                        "description": "job",
                        "schema": {
                            "$ref": "#/definitions/management.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "job",
                        "schema": {
                            "$ref": "#/definitions/management.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/payment/config": {
            "get": {
                "description": "retrieves the publishable key for stripe",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Gets the publishable key for stripe",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token: test",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Public key",
                        "schema": {
                            "$ref": "#/definitions/payments.PublicKey"
                        }
                    },
                    "400": {
                        "description": "Config",
                        "schema": {
                            "$ref": "#/definitions/payments.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Config",
                        "schema": {
                            "$ref": "#/definitions/payments.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/payment/create-intent": {
            "post": {
                "description": "retrieves the publishable key for stripe",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Gets the publishable key for stripe",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token: test",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "job-id",
                        "name": "job-id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Public key",
                        "schema": {
                            "$ref": "#/definitions/payments.ClientSecret"
                        }
                    },
                    "400": {
                        "description": "Client Secret",
                        "schema": {
                            "$ref": "#/definitions/payments.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Client Secret",
                        "schema": {
                            "$ref": "#/definitions/payments.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/register/admin": {
            "post": {
                "description": "Registers a new admin user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Registers a new admin user",
                "parameters": [
                    {
                        "description": "Registers a new user",
                        "name": "job",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/useraccount.UserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Registers a new user",
                        "schema": {
                            "$ref": "#/definitions/useraccount.UserResponse"
                        },
                        "headers": {
                            "Token": {
                                "type": "string",
                                "description": "authorisation token"
                            }
                        }
                    },
                    "400": {
                        "description": "Registers a new user",
                        "schema": {
                            "$ref": "#/definitions/useraccount.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Registers a new user",
                        "schema": {
                            "$ref": "#/definitions/useraccount.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/register/courier": {
            "post": {
                "description": "Registers a new courier user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Registers a new courier user",
                "parameters": [
                    {
                        "description": "Registers a new user",
                        "name": "job",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/useraccount.UserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Registers a new user",
                        "schema": {
                            "$ref": "#/definitions/useraccount.UserResponse"
                        },
                        "headers": {
                            "Token": {
                                "type": "string",
                                "description": "authorisation token"
                            }
                        }
                    },
                    "400": {
                        "description": "Registers a new user",
                        "schema": {
                            "$ref": "#/definitions/useraccount.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Registers a new user",
                        "schema": {
                            "$ref": "#/definitions/useraccount.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/register/customer": {
            "post": {
                "description": "Registers a new customer user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Registers a new customer user",
                "parameters": [
                    {
                        "description": "Registers a new user",
                        "name": "job",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/useraccount.UserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Registers a new user",
                        "schema": {
                            "$ref": "#/definitions/useraccount.UserResponse"
                        },
                        "headers": {
                            "Token": {
                                "type": "string",
                                "description": "authorisation token"
                            }
                        }
                    },
                    "400": {
                        "description": "Registers a new user",
                        "schema": {
                            "$ref": "#/definitions/useraccount.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Registers a new user",
                        "schema": {
                            "$ref": "#/definitions/useraccount.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/update-login": {
            "put": {
                "description": "Updates a user password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Updates a user password",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token: test",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Logins a user",
                        "name": "updatePassword",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/useraccount.UpdatePasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Logins a user",
                        "schema": {
                            "$ref": "#/definitions/useraccount.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Logins a user",
                        "schema": {
                            "$ref": "#/definitions/useraccount.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/info": {
            "get": {
                "description": "Retrieves user information from the JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieves user information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token: test",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieves user information",
                        "schema": {
                            "$ref": "#/definitions/useraccount.UserInfo"
                        }
                    },
                    "400": {
                        "description": "Retrieves user information",
                        "schema": {
                            "$ref": "#/definitions/useraccount.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Retrieves user information",
                        "schema": {
                            "$ref": "#/definitions/useraccount.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/verify/postcode": {
            "post": {
                "description": "Checks if a postcode is valid returns 200 if successful",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Checks if a postcode is valid",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token: test",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CR0 2HS",
                        "name": "postcode",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    }
                }
            }
        }
    },
    "definitions": {
        "deliveries.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "deliveries.JobOrderStatusResponse": {
            "type": "object",
            "properties": {
                "order_status": {
                    "type": "string"
                }
            }
        },
        "deliveries.JobRequest": {
            "type": "object",
            "properties": {
                "destination": {
                    "$ref": "#/definitions/deliveries.Recipient"
                },
                "origin": {
                    "$ref": "#/definitions/deliveries.Recipient"
                },
                "worker_notes": {
                    "type": "string"
                }
            }
        },
        "deliveries.JobResponse": {
            "type": "object",
            "properties": {
                "create_time": {
                    "type": "string"
                },
                "creator": {
                    "type": "integer"
                },
                "destination": {
                    "$ref": "#/definitions/deliveries.Recipient"
                },
                "id": {
                    "type": "string"
                },
                "last_time_modified": {
                    "type": "string"
                },
                "order_status": {
                    "type": "integer"
                },
                "origin": {
                    "$ref": "#/definitions/deliveries.Recipient"
                },
                "short_id": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "tracking_url": {
                    "type": "string"
                },
                "worker": {
                    "type": "integer"
                },
                "worker_notes": {
                    "type": "string"
                }
            }
        },
        "deliveries.JobStatusResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        },
        "deliveries.Recipient": {
            "type": "object",
            "required": [
                "city",
                "first_line_address",
                "first_name",
                "postcode"
            ],
            "properties": {
                "city": {
                    "type": "string"
                },
                "company_name": {
                    "type": "string"
                },
                "email_address": {
                    "type": "string"
                },
                "first_line_address": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "notes": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "postcode": {
                    "type": "string"
                },
                "second_line_address": {
                    "type": "string"
                },
                "second_name": {
                    "type": "string"
                },
                "third_line_address": {
                    "type": "string"
                },
                "town": {
                    "type": "string"
                }
            }
        },
        "deliverysvc.Job": {
            "type": "object",
            "properties": {
                "createTime": {
                    "type": "string"
                },
                "creator": {
                    "type": "integer"
                },
                "destinationCity": {
                    "type": "string"
                },
                "destinationCompanyName": {
                    "description": "Origin Details",
                    "type": "string"
                },
                "destinationEmailAddress": {
                    "type": "string"
                },
                "destinationFirstLineAddress": {
                    "type": "string"
                },
                "destinationFirstName": {
                    "type": "string"
                },
                "destinationLatitude": {
                    "type": "number"
                },
                "destinationLongitude": {
                    "type": "number"
                },
                "destinationNotes": {
                    "type": "string"
                },
                "destinationPhoneNumber": {
                    "type": "string"
                },
                "destinationPostcode": {
                    "type": "string"
                },
                "destinationSecondLineAddress": {
                    "type": "string"
                },
                "destinationSecondName": {
                    "type": "string"
                },
                "destinationThirdLineAddress": {
                    "type": "string"
                },
                "destinationTown": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "lastTimeModified": {
                    "type": "string"
                },
                "orderStatus": {
                    "type": "integer"
                },
                "originCity": {
                    "type": "string"
                },
                "originCompanyName": {
                    "description": "Destination Details",
                    "type": "string"
                },
                "originEmailAddress": {
                    "type": "string"
                },
                "originFirstLineAddress": {
                    "type": "string"
                },
                "originFirstName": {
                    "type": "string"
                },
                "originLatitude": {
                    "type": "number"
                },
                "originLongitude": {
                    "type": "number"
                },
                "originNotes": {
                    "type": "string"
                },
                "originPhoneNumber": {
                    "type": "string"
                },
                "originPostcode": {
                    "type": "string"
                },
                "originSecondLineAddress": {
                    "type": "string"
                },
                "originSecondName": {
                    "type": "string"
                },
                "originThirdLineAddress": {
                    "type": "string"
                },
                "originTown": {
                    "type": "string"
                },
                "shortID": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "trackingURL": {
                    "type": "string"
                },
                "worker": {
                    "type": "integer"
                },
                "workerNotes": {
                    "description": "courier notes",
                    "type": "string"
                }
            }
        },
        "management.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "payments.ClientSecret": {
            "type": "object",
            "properties": {
                "clientSecret": {
                    "type": "string"
                }
            }
        },
        "payments.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/payments.ErrorResponseMessage"
                }
            }
        },
        "payments.ErrorResponseMessage": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "payments.PublicKey": {
            "type": "object",
            "properties": {
                "publishableKey": {
                    "type": "string"
                }
            }
        },
        "useraccount.DriverInfo": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                }
            }
        },
        "useraccount.DriverLocation": {
            "type": "object",
            "properties": {
                "latitude": {
                    "type": "string"
                },
                "longitude": {
                    "type": "string"
                }
            }
        },
        "useraccount.DriverStatus": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "boolean"
                }
            }
        },
        "useraccount.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "useraccount.LoginUser": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "useraccount.NewAPIKeyResponse": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                }
            }
        },
        "useraccount.UpdatePasswordRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "new_password": {
                    "type": "string"
                },
                "old_password": {
                    "type": "string"
                }
            }
        },
        "useraccount.UserInfo": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                }
            }
        },
        "useraccount.UserRequest": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password",
                "phone_number"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                }
            }
        },
        "useraccount.UserResponse": {
            "type": "object",
            "properties": {
                "createTime": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                }
            }
        },
        "usersvc.DriverState": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "courierID": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
